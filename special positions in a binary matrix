class Solution {
    public int numSpecial(int[][] mat) {
        // Get the number of rows (n) and columns (m) in the matrix
        int n = mat.length;
        int m = mat[0].length;
        
        // Initialize a counter for special positions
        int ans = 0;
        
        // Array to store the sum of each row (size of the array is n, and all elements are initially set to 0)
        int[] rowSum = new int[n];
        // Array to store the sum of each column (size of the array is m, and all elements are initially set to 0)
        int[] colSum = new int[m];
        
        // Calculate the sum of each row and column
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                rowSum[i] += mat[i][j];
                colSum[j] += mat[i][j];
            }
        }
        
        // Check for special positions
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                // Check if the current position is 1 and the sum of its row and column is 1
                if (mat[i][j] == 1 && rowSum[i] == 1 && colSum[j] == 1) {
                    // Increment the counter for special positions
                    ans++;
                }
            }
        }
        
        // Return the total count of special positions
        return ans;
    }
}
